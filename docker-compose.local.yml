services:
  # Main Application Service
  main-app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://fastapi:password@postgres:5432/briefings_feed
      - SECRET_KEY=local-development-secret-key
      - INGESTION_SERVICE_URL=http://feed-ingestion:8001
      - PERPLEXITY_API_KEY=${PERPLEXITY_API_KEY}
    volumes:
      - ./:/app
    depends_on:
      - postgres
      - feed-ingestion
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Feed Ingestion Service
  feed-ingestion:
    build:
      context: .
      dockerfile: services/feed-ingestion/Dockerfile
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://fastapi:password@postgres:5432/briefings_feed
      - PERPLEXITY_API_KEY=${PERPLEXITY_API_KEY}
      - NEWS_API_KEY=${NEWS_API_KEY}
      - REDDIT_CLIENT_ID=${REDDIT_CLIENT_ID}
      - REDDIT_CLIENT_SECRET=${REDDIT_CLIENT_SECRET}
      - ENABLE_POST_PROCESSING_NEWSAPI=true
      - ENABLE_POST_PROCESSING_PERPLEXITY=true
      - PYTHONPATH=/app:/app/shared
    volumes:
      - ./shared:/app/shared
      - ./services/feed-ingestion:/app
    depends_on:
      - postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/ingestion/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Celery Worker
  celery-worker:
    build:
      context: .
      dockerfile: services/feed-ingestion/Dockerfile
    command: ["celery", "-A", "celery_app", "worker", "--loglevel=info"]
    environment:
      - DATABASE_URL=postgresql://fastapi:password@postgres:5432/briefings_feed
      - PERPLEXITY_API_KEY=${PERPLEXITY_API_KEY}
      - NEWS_API_KEY=${NEWS_API_KEY}
      - REDDIT_CLIENT_ID=${REDDIT_CLIENT_ID}
      - REDDIT_CLIENT_SECRET=${REDDIT_CLIENT_SECRET}
      - ENABLE_POST_PROCESSING_NEWSAPI=true
      - ENABLE_POST_PROCESSING_PERPLEXITY=true
      - PYTHONPATH=/app:/app/shared
    volumes:
      - ./shared:/app/shared
      - ./services/feed-ingestion:/app
    depends_on:
      - postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "celery", "-A", "celery_app", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Celery Beat Scheduler
  celery-beat:
    build:
      context: .
      dockerfile: services/feed-ingestion/Dockerfile
    command: ["celery", "-A", "celery_app", "beat", "--loglevel=info"]
    environment:
      - DATABASE_URL=postgresql://fastapi:password@postgres:5432/briefings_feed
      - PERPLEXITY_API_KEY=${PERPLEXITY_API_KEY}
      - NEWS_API_KEY=${NEWS_API_KEY}
      - REDDIT_CLIENT_ID=${REDDIT_CLIENT_ID}
      - REDDIT_CLIENT_SECRET=${REDDIT_CLIENT_SECRET}
      - ENABLE_POST_PROCESSING_NEWSAPI=true
      - ENABLE_POST_PROCESSING_PERPLEXITY=true
      - PYTHONPATH=/app:/app/shared
    volumes:
      - ./shared:/app/shared
      - ./services/feed-ingestion:/app
    depends_on:
      - postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "celery", "-A", "celery_app", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: briefings_feed
      POSTGRES_USER: fastapi
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fastapi -d briefings_feed"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
