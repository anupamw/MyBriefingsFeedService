name: Deploy and Run Ingestion Service Fix

on:
  workflow_dispatch:
    inputs:
      run_fix:
        description: 'Run the ingestion service fix script'
        required: true
        default: true
        type: boolean

jobs:
  deploy-and-fix:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Debug secrets and environment
      run: |
        echo "üîç Debugging secrets and environment..."
        echo "DROPLET_IP: ${{ secrets.DROPLET_IP }}"
        echo "DROPLET_USER: ${{ secrets.DROPLET_USER }}"
        echo "DROPLET_IP length: ${#DROPLET_IP}"
        echo "DROPLET_USER length: ${#DROPLET_USER}"
        
        if [ -z "${{ secrets.DROPLET_IP }}" ]; then
          echo "‚ùå DROPLET_IP is empty or not set"
          exit 1
        fi
        
        if [ -z "${{ secrets.DROPLET_USER }}" ]; then
          echo "‚ùå DROPLET_USER is empty or not set"
          exit 1
        fi
        
        echo "‚úÖ Secrets appear to be set"
        
    - name: Test SSH connection
      run: |
        echo "üîç Testing SSH connection..."
        echo "Testing connection to ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_IP }}"
        
        # Test basic connectivity
        ping -c 3 ${{ secrets.DROPLET_IP }} || echo "‚ùå Ping failed"
        
        # Test SSH connection (without executing commands)
        ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_IP }} "echo 'SSH connection successful'" || echo "‚ùå SSH connection failed"
        
    - name: Check if script exists
      run: |
        echo "üîç Checking if fix script exists..."
        ls -la fix_ingestion_service.sh || echo "‚ùå Script not found"
        cat fix_ingestion_service.sh | head -5 || echo "‚ùå Cannot read script"
        
    - name: Copy fix script to droplet
      run: |
        echo "üì§ Copying fix script to droplet..."
        echo "Source: $(pwd)/fix_ingestion_service.sh"
        echo "Destination: ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_IP }}:/home/${{ secrets.DROPLET_USER }}/"
        
        scp -o StrictHostKeyChecking=no -v fix_ingestion_service.sh ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_IP }}:/home/${{ secrets.DROPLET_USER }}/
        
    - name: Run fix script on droplet
      run: |
        echo "üîß Running ingestion service fix on droplet..."
        echo "Connecting to: ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_IP }}"
        
        ssh -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_IP }} << 'EOF'
          echo "üîç Current directory: $(pwd)"
          echo "üîç Listing files:"
          ls -la
          
          echo "üîç Checking if script exists:"
          ls -la fix_ingestion_service.sh || echo "‚ùå Script not found"
          
          echo "üîç Making script executable:"
          chmod +x fix_ingestion_service.sh
          
          echo "üîç Running script:"
          ./fix_ingestion_service.sh
        EOF
        
    - name: Clean up script
      run: |
        echo "üßπ Cleaning up script from droplet..."
        ssh -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_IP }} "rm -f /home/${{ secrets.DROPLET_USER }}/fix_ingestion_service.sh"
        
    - name: Verify fix results
      run: |
        echo "‚úÖ Verifying fix results..."
        ssh -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_IP }} << 'EOF'
          echo "üìä Checking pod status..."
          kubectl get pods -n my-briefings
          
          echo ""
          echo "üìä Testing ingestion service..."
          curl -s http://64.227.134.87:30101/ingestion/health | jq '.'
        EOF 